components {
    comp(arg1,arg2) {
        div_componentu {
            "arg1 = " $arg1
            "arg2 = " $arg2
        }
    }

    c1() { c2() }
    c2() { c1() }
}

html {
<
$var=2+2
$var2=4
>
div {
}

each [1,2,3,4,5,6] as var {
"Row: " + $var
}
    switch(2+2) {
        4 -> div{
        "In here" + STRING(2)
        }
        else -> div{}
    }

    "Hello "+ STRING(2)

   STRING(2+2)
   STRING($var+$var2)

   repeat($var2) {
    div {
    $var
    }
    }

   div {
       <
           $arr = [1,2,3,4,5]
           $nietablica = 150
           $liczba = 15

           //$przypisanie_nieistniejacej_zmiennej = $nieistniejaca_zmienna
       >
           //"wyłuskanie nie intem " + $arr["xd"]

           //"wyłuskanie nietablicy " + $nietablica[3]

           //"out of bounds " + $arr[5] //TODO FIX

           //"nielegalna_operacja" % 2
           //5 % [1,2,3] //TODO idiotyczny błąd
           //4-3 //TODO idiotyczny błąd
           //3 //TODO idiotyczny błąd
           [1,2,3] //TODO a tu czemu błędu nie ma?
           //$arr - $arr //prawidlowe,gdyz jak uzywasz zmiennych niestringowych od razu bez STRING to jest stringiem
           //ODP. złe rozwiązanie które daje idiotyczne błędy. Skoro jest niejawne costowanie do stringa to czemu linia zawierająca tylko 3 wyrzuca cannont 3 cast to string? I dlaczego castuje pierwszy element do stringa  a potem próbuje wykonać operacje, zamiast na wyniku, co to za upiorna kolejność działań?
           //$arr + 3 // dodaje element do listy
           //3 //wiadomosc cannot cast nic nie mówi. powinno być, że w htmleleent mogą znajdować się tylko stringi
          //"ARR ADD"+ STRING($arr + $arr) //
          // "aRR MUL"+ STRING($arr * $arr)
           //STRING($arr - $arr)
           //STRING($arr - 3) //TODO niemądra wiadomość błędu
           //STRING(3 - $arr) //TODO niemądra wiadomość błędu
           //STRING("XD"+3) //TODO niemądra wiadomość błędu
           //STRING($arr+3)
           //STRING(3 + $arr)
           //STRING(3 * "xd") //TODO niemądra wiadomość błędu
           //STRING(3 - [1,2]) //TODO FIX


           "odejmowanie 5-3= " + STRING(5 - 3)
           "mnozenie 5*3= " + STRING(5 * 3)
           "wiekszy 11 > 2= " + STRING(11 > 2)
           "mniejszy 11 < 2= " + STRING(11 < 2)
           //switch(4) { //TODO FIX
             //  $liczba -> "jeden"
               //else -> "niejeden"
           //}

           //switch($arr) { //TODO FIX
             //   1 -> "jeden"
             //   else -> "niejeden"
          // }

           //each [$liczba, $nieistniejaca] as var {
            // "liczba: " + $var
           //}

           $arr
   }

   //repeat("nieliczba") {
   //     "repeat(nieliczba)"
   //}

   comp("za","duzo", "argumentow") //TODO ignoruje zbedny argument, można naprawić ale niekoniecznie

   //comp("za_malo_argumentow") //TODO FIX

    //c1() //co w przypadku stackoverflow, tu ciezko cos zmienic bo errora nie obsluzysz
}